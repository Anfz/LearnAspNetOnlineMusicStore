@using NonFactors.Mvc.Grid
@model IEnumerable<MvcMusicStudio.Models.Album>
@{
    ViewBag.Title = "Albums";
}
<div class="panel panel-default">
    <div class="panel-heading">
        <h2 class="pull-left panel-title">Albums</h2>
        @Html.ActionLink("Create New", "Create", new { }, new { @class = "btn btn-primary pull-right" })
        <div class="clearfix"></div>
    </div>
    @(Html
            .Grid(Model)
            .Build(columns =>
            {
                columns.Add(model => model.Title);
                columns.Add(model => Html.ActionLink("Edit", "Edit", new { id = model.AlbumID }, new { @class = "btn pull-right" })).Encoded(false);
                columns.Add(model => Html.ActionLink("Details", "Details", new { id = model.AlbumID }, new { @class = "btn pull-right" })).Encoded(false);
                columns.Add(model => Html.ActionLink("Delete", "Delete", new { id = model.AlbumID }, new { @class = "btn pull-right" })).Encoded(false);
                columns.Add(model => Html.ActionLink("Create Review", "Create", "Reviews", new { id = model.AlbumID }, new { @class = "btn pull-right" } )).Encoded(false);
            })
            .Filterable()
            .Sortable()
            .Css("table-striped")
            .Pageable(pager =>
            {
                pager.InitialPage = 1;
                pager.RowsPerPage = 5;
            })
    )
</div>
@section scripts {
    @Scripts.Render("~/bundles/MvcGrid")
    <script>
        $('.mvc-grid').mvcgrid();
    </script>
}
@section styles {
    @Styles.Render("~/Content/MvcGrid")
}